---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: "Remove trailing .requires"
  no_log: "{{ not tripleo_container_manage_debug }}"
  file:
    path: "/etc/systemd/system/tripleo_{{ lookup('dict', container_data_requires).key }}.requires"
    state: absent
  loop: "{{ container_config }}"
  loop_control:
    loop_var: container_data_requires

- name: "Cleanup systemd healthchecks"
  no_log: "{{ not tripleo_container_manage_debug }}"
  when:
    - not tripleo_container_manage_healthcheck_disabled
  include: podman/stat_healthcheck.yml container_systemd_healthcheck_name="{{ lookup('dict', item).key }}"
  loop: "{{ container_config }}"

- name: "Create systemd services files"
  no_log: "{{ not tripleo_container_manage_debug }}"
  template:
    src: systemd-service.j2
    dest: "/etc/systemd/system/tripleo_{{ lookup('dict', container_data_unit).key }}.service"
    mode: '0644'
    owner: root
    group: root
  register: systemd_file
  loop: "{{ container_config }}"
  loop_control:
    loop_var: container_data_unit

- name: "Force systemd daemon reload if a systemd file changed"
  systemd:
    daemon_reload: true
  when:
    - (systemd_file|get_changed_async_task_names|length) > 0

- name: "Start or restart systemd services"
  systemd:
    # Restart the service if it was already running
    state: restarted
    name: "tripleo_{{ container_sysd_name }}.service"
    enabled: true
    daemon_reload: false
  loop: "{{ (systemd_file|get_changed_async_task_names(extra=containers_changed|default([]))) }}"
  loop_control:
    loop_var: container_sysd_name
  register: systemd_service_enable
  until: (systemd_service_enable.status is defined) and (systemd_service_enable.status.Result == "success")
  retries: 5
  delay: 5
