---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Baremetal bios reset for multiple Ironic Nodes
  connection: "{{ (tripleo_target_host is defined) | ternary('ssh', 'local') }}"
  hosts: "{{ tripleo_target_host | default('localhost') }}"
  remote_user: "{{ tripleo_target_user | default(lookup('env', 'USER')) }}"
  gather_facts: "{{ (tripleo_target_host is defined) | ternary(true, false) }}"
  any_errors_fatal: true
  vars:
    run_validations: false
    concurrency: 20
    max_retries: 2
    node_timeout: 1200
  pre_tasks:
    - name: Check for required inputs
      fail:
        msg: >
          Input missing `{{ item }}`
      when:
        - hostvars[inventory_hostname][item] is undefined
      loop:
        - node_uuids
        - bios_configuration

  tasks:
    - name: Set node_uuids_apply fact
      set_fact:
        node_uuids_apply: "{{ node_uuids }}"

    - name: exit if nothing to do
      block:
        - name: Notice
          debug:
            msg: No nodes are manageable at this time.

        - name: end play
          meta: end_play
      when:
        - (node_uuids_apply | length) < 1

    - name: Notice
      debug:
        msg: >-
          Running raid config on the following nodes, {{ node_uuids_apply }}.

    - name: Start baremetal bios aaply
      os_baremetal_clean_node:
        cloud: undercloud
        node_uuid: "{{ node_uuids_apply }}"
        concurrency: "{{ concurrency }}"
        timeout: "{{ node_timeout }}"
        clean_steps:
          - interface: bios
            step: apply_configuration
            args:
              settings: "{{ bios_configuration }}"
